using System;
using System.Threading.Tasks;
/*[begin custom code head]*/
//自定义命名空间区域
using AQ.Models;
using AQ.Core.Repository;
using AQ.ModelExtension;

/*[end custom code head]*/

namespace {IRepositoryNamaspace}
{
    public interface I{ModelName}Repository : IBaseRepository<{ModelName}, {KeyTypeName}>
    {
		/*[begin custom code body]*/
		#region 自定义代码区域,重新生成代码不会覆盖
		#endregion
		/*[end custom code body]*/

		/// <summary>
        /// 逻辑删除
        /// </summary>
        /// <param name="keys"></param>
        /// <returns></returns>
        int DeleteLogical({KeyTypeName}[] keys);

		/// <summary>
        /// 逻辑删除
        /// </summary>
        /// <param name="keys"></param>
        /// <returns></returns>
        Task<int> DeleteLogicalAsync({KeyTypeName}[] keys);

		/// <summary>
        /// 更改状态
        /// </summary>
        /// <param name="status">状态</param>
        /// <param name="keys">主键</param>
        /// <returns></returns>
        int UpdateStatus(int status, {KeyTypeName}[] keys);

        /// <summary>
        /// 更改状态
        /// </summary>
        /// <param name="status">状态</param>
        /// <param name="keys">主键</param>
        /// <returns></returns>
        Task<int> UpdateStatusAsync(int status, {KeyTypeName}[] keys);

		/*[begin custom code bottom]*/
		#region 自定义代码区域,重新生成代码不会覆盖
		#endregion
		/*[end custom code bottom]*/
    }
}
